diff a/htdocs/custom/extendedintervention/class/api_extendedinterventionapi.class.php b/htdocs/custom/extendedintervention/class/api_extendedinterventionapi.class.php	(rejected hunks)
@@ -1131,22 +1131,7 @@ class ExtendedInterventionApi extends DolibarrApi {
             }
             $current_survey = $extendedintervention->survey;
 
-            
-			//Delete empty survey bloc
-			
-			if ($delete_question_bloc) {
-                    foreach ($current_survey as $id_equipment => $survey_bloc) {
-                        if (!isset($survey[$id_equipment])) {
-                            if ($survey_bloc->delete(DolibarrApiAccess::$user) < 0) {
-                                self::$db->rollback();
-                                throw new RestException(500, "Error while deleting the equipement question bloc", ['id_intervention' => $id_intervention, 'id_equipment' => $current_equipment_id, 'details' => $this->_getErrors($qb)]);
-                            }
-                        }
-                    }
-                }
-			
-			
-			// Save survey bloc
+            // Save survey bloc
             //-------------------------
             foreach ($survey as $id_equipment => $survey_bloc) {
                 $current_equipment_id = isset($survey_bloc['fk_equipment']) ? $survey_bloc['fk_equipment'] : $id_equipment;
@@ -1183,11 +1168,15 @@ class ExtendedInterventionApi extends DolibarrApi {
                 $question_bloc_saved = array();
 
                 // Save question bloc
-                //-------------------------$id_c_question_bloc 
-                foreach ($survey_bloc['survey'] as $id => $question_bloc) {
-                    $current_id = isset($question_bloc['id']) ? $question_bloc['id'] : $id;
+                //-------------------------
+                foreach ($survey_bloc['survey'] as $id_c_question_bloc => $question_bloc) {
+                    $current_c_question_bloc_id = $question_bloc['fk_c_question_bloc'];
+
                     // Get handler of the question bloc (if exist in the current survey) or create it
-                    $current_question_bloc = isset($current_survey_bloc->survey[$current_id]) ? $current_survey_bloc->survey[$current_id] : new EIQuestionBloc(self::$db, $current_survey_bloc);
+
+                    $idInCurrentSurvey = array_search($current_survey_bloc->survey,array_column($current_c_question_bloc_id,"fk_c_question_bloc"));
+
+                    $current_question_bloc = $idInCurrentSurvey==!false ? $current_survey_bloc->survey[$idInCurrentSurvey] : new EIQuestionBloc(self::$db, $current_survey_bloc);
 
                     // Test if is read only
 //                    if ($current_question_bloc->read_only) {
@@ -1230,15 +1219,15 @@ class ExtendedInterventionApi extends DolibarrApi {
 
                     if ($result < 0) {
                         self::$db->rollback();
-                        throw new RestException(500, "Error while saving the question bloc", ['id_intervention' => $id_intervention, 'id_equipment' => $current_equipment_id, 'id_c_question_bloc' => $current_question_bloc->fk_c_question_bloc, 'details' => $this->_getErrors($current_question_bloc)]);
+                        throw new RestException(500, "Error while saving the question bloc", ['id_intervention' => $id_intervention, 'id_equipment' => $current_equipment_id, 'id_c_question_bloc' => $current_c_question_bloc_id, 'details' => $this->_getErrors($current_question_bloc),'question_bloc'=>$question_bloc]);
                     }
 
                     // Save question
                     //-------------------------
-                    foreach ($question_bloc['lines'] as $id_question => $question) {
-                        //$current_question_id = isset($question['id']) ? $question['id'] : $id_question;
+                    foreach ($question_bloc['lines'] as $id_c_question => $question) {
+                        $current_c_question_id = isset($question['fk_c_question']) ? $question['fk_c_question'] : $id_c_question;
                         // Get handler of the question (if exist in the current survey) or create it
-                        $current_question = isset($current_question_bloc->lines[$question['id']]) ? $current_question_bloc->lines[$question['id']] : new EIQuestionBlocLine(self::$db);
+                        $current_question = isset($current_question_bloc->lines[$current_c_question_id]) ? $current_question_bloc->lines[$current_c_question_id] : new EIQuestionBlocLine(self::$db);
 
                         // Test if is read only
 //                        if ($current_question->read_only) {
