diff a/htdocs/custom/retourproduits/core/modules/retourproduits/doc/pdf_retourproduits_rouget.modules.php b/htdocs/custom/retourproduits/core/modules/retourproduits/doc/pdf_retourproduits_rouget.modules.php	(rejected hunks)
@@ -928,6 +928,28 @@ class pdf_retourproduits_rouget extends ModelePdfExpedition
 
 		if ($showaddress)
 		{
+			// Open-DSI FJ: Invert Recipient and sender when returning products!
+			// If SHIPPING contact defined, we use it
+			$usecontact=false;
+			$arrayidcontact=$object->$origin->getIdContact('external','SHIPPING');
+			if (count($arrayidcontact) > 0)
+			{
+				$usecontact=true;
+				$result=$object->fetch_contact($arrayidcontact[0]);
+			}
+
+			//Recipient name
+			// On peut utiliser le nom de la societe du contact
+			if ($usecontact && !empty($conf->global->MAIN_USE_COMPANY_NAME_OF_CONTACT)) {
+				$thirdparty = $object->contact;
+			} else {
+				$thirdparty = $object->thirdparty;
+			}
+
+			$carac_client_name= pdfBuildThirdpartyName($thirdparty, $outputlangs);
+
+			$carac_client=pdf_build_address($outputlangs,$this->emetteur,$object->thirdparty,(!empty($object->contact)?$object->contact:null),$usecontact,'targetwithdetails',$object);
+
 			// Sender properties
 			$carac_emetteur='';
 		 	// Add internal contact of origin element if defined
@@ -963,36 +985,15 @@ class pdf_retourproduits_rouget extends ModelePdfExpedition
 			// Show sender name
 			$pdf->SetXY($posx+2,$posy+3);
 			$pdf->SetFont('','B',$default_font_size);
-			$pdf->MultiCell($widthrecbox-2, 4, $outputlangs->convToOutputCharset($this->emetteur->name), 0, 'L');
+			$pdf->MultiCell($widthrecbox-2, 4, $outputlangs->convToOutputCharset($carac_client_name), 0, 'L');
 			$posy=$pdf->getY();
 
 			// Show sender information
 			$pdf->SetXY($posx+2,$posy);
 			$pdf->SetFont('','', $default_font_size - 1);
-			$pdf->MultiCell($widthrecbox-2, 4, $carac_emetteur, 0, 'L');
+			$pdf->MultiCell($widthrecbox-2, 4, $carac_client, 0, 'L');
 
 
-			// If SHIPPING contact defined, we use it
-			$usecontact=false;
-			$arrayidcontact=$object->$origin->getIdContact('external','SHIPPING');
-			if (count($arrayidcontact) > 0)
-			{
-				$usecontact=true;
-				$result=$object->fetch_contact($arrayidcontact[0]);
-			}
-
-			//Recipient name
-			// On peut utiliser le nom de la societe du contact
-			if ($usecontact && !empty($conf->global->MAIN_USE_COMPANY_NAME_OF_CONTACT)) {
-				$thirdparty = $object->contact;
-			} else {
-				$thirdparty = $object->thirdparty;
-			}
-
-			$carac_client_name= pdfBuildThirdpartyName($thirdparty, $outputlangs);
-
-			$carac_client=pdf_build_address($outputlangs,$this->emetteur,$object->thirdparty,(!empty($object->contact)?$object->contact:null),$usecontact,'targetwithdetails',$object);
-
 			// Show recipient
 			$widthrecbox=!empty($conf->global->MAIN_PDF_USE_ISO_LOCATION) ? 92 : 100;
 			if ($this->page_largeur < 210) $widthrecbox=84;	// To work with US executive format
@@ -1010,14 +1011,14 @@ class pdf_retourproduits_rouget extends ModelePdfExpedition
 			// Show recipient name
 			$pdf->SetXY($posx+2,$posy+3);
 			$pdf->SetFont('','B', $default_font_size);
-			$pdf->MultiCell($widthrecbox, 2, $carac_client_name, 0, 'L');
+			$pdf->MultiCell($widthrecbox, 2, $this->emetteur->name, 0, 'L');
 
 			$posy = $pdf->getY();
 
 			// Show recipient information
 			$pdf->SetFont('','', $default_font_size - 1);
 			$pdf->SetXY($posx+2,$posy);
-			$pdf->MultiCell($widthrecbox, 4, $carac_client, 0, 'L');
+			$pdf->MultiCell($widthrecbox, 4, $carac_emetteur, 0, 'L');
 		}
 
 		$pdf->SetTextColor(0,0,0);
