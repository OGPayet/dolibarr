diff a/htdocs/custom/requestmanager/class/actions_requestmanager.class.php b/htdocs/custom/requestmanager/class/actions_requestmanager.class.php	(rejected hunks)
@@ -144,170 +144,178 @@ class ActionsRequestManager
         $contexts = explode(':', $parameters['context']);
 
         if (in_array('actioncard', $contexts)) {
-            $id = GETPOST('id', 'int');
-            $object->fetch($id);
+            if ($action == 'create' || $action == 'add') {
+                $actioncode = GETPOST('actioncode', 'alpha');
 
-            if ($object->type_code == 'AC_RM_OUT' || $object->type_code == 'AC_RM_PRIV' || $object->type_code == 'AC_RM_IN') {
-                $langs->load('requestmanager@requestmanager');
+                if ($actioncode == 'AC_RM_OUT' || $actioncode == 'AC_RM_PRIV' || $actioncode == 'AC_RM_IN') {
+                    $langs->load('requestmanager@requestmanager');
 
-                if ($action == 'create' || $action == 'add') {
                     $this->errors[] = $langs->trans('RequestManagerErrorCanOnlyCreateMessageFromRequest');
                     $action = '';
                     return -1;
-                } elseif ($action == 'edit' || $action == 'update') {
-                    $this->errors[] = $langs->trans('RequestManagerErrorMessageCanNotBeModified');
-                    $action = '';
-                    return -1;
-                    /*$error = 0;
-                    $cancel = GETPOST('cancel', 'alpha');
-                    if (empty($cancel) && $user->rights->requestmanager->creer) {
-                        dol_include_once('/requestmanager/class/requestmanagermessage.class.php');
-                        $requestmanagermessage = new RequestManagerMessage($this->db);
-
-                        require_once DOL_DOCUMENT_ROOT . '/comm/action/class/cactioncomm.class.php';
-                        $cactioncomm = new CActionComm($this->db);
+                }
+            } else {
+                $id = GETPOST('id', 'int');
+                $object->fetch($id);
+
+                if ($object->type_code == 'AC_RM_OUT' || $object->type_code == 'AC_RM_PRIV' || $object->type_code == 'AC_RM_IN') {
+                    $langs->load('requestmanager@requestmanager');
+
+                    if ($action == 'edit' || $action == 'update') {
+                        $this->errors[] = $langs->trans('RequestManagerErrorMessageCanNotBeModified');
+                        $action = '';
+                        return -1;
+                        /*$error = 0;
+                        $cancel = GETPOST('cancel', 'alpha');
+                        if (empty($cancel) && $user->rights->requestmanager->creer) {
+                            dol_include_once('/requestmanager/class/requestmanagermessage.class.php');
+                            $requestmanagermessage = new RequestManagerMessage($this->db);
+
+                            require_once DOL_DOCUMENT_ROOT . '/comm/action/class/cactioncomm.class.php';
+                            $cactioncomm = new CActionComm($this->db);
+
+                            $backtopage = GETPOST('backtopage', 'alpha');
+
+                            $fulldayevent = GETPOST('fullday');
+                            $aphour = GETPOST('aphour');
+                            $apmin = GETPOST('apmin');
+                            $p2hour = GETPOST('p2hour');
+                            $p2min = GETPOST('p2min');
+                            $percentage = in_array(GETPOST('status'), array(-1, 100)) ? GETPOST('status') : (in_array(GETPOST('complete'), array(-1, 100)) ? GETPOST('complete') : GETPOST("percentage"));    // If status is -1 or 100, percentage is not defined and we must use status
+
+                            // Clean parameters
+                            if ($aphour == -1) $aphour = '0';
+                            if ($apmin == -1) $apmin = '0';
+                            if ($p2hour == -1) $p2hour = '0';
+                            if ($p2min == -1) $p2min = '0';
+
+                            $requestmanagermessage->fetch($id);
+                            $requestmanagermessage->fetch_userassigned();
+
+                            $datep = dol_mktime($fulldayevent ? '00' : $aphour, $fulldayevent ? '00' : $apmin, 0, $_POST["apmonth"], $_POST["apday"], $_POST["apyear"]);
+                            $datef = dol_mktime($fulldayevent ? '23' : $p2hour, $fulldayevent ? '59' : $p2min, $fulldayevent ? '59' : '0', $_POST["p2month"], $_POST["p2day"], $_POST["p2year"]);
+
+                            $requestmanagermessage->fk_action = dol_getIdFromCode($this->db, GETPOST("actioncode"), 'c_actioncomm');
+                            $requestmanagermessage->label = GETPOST("label");
+                            $requestmanagermessage->datep = $datep;
+                            $requestmanagermessage->datef = $datef;
+                            $requestmanagermessage->percentage = $percentage;
+                            $requestmanagermessage->priority = GETPOST("priority");
+                            $requestmanagermessage->fulldayevent = GETPOST("fullday") ? 1 : 0;
+                            $requestmanagermessage->location = GETPOST('location');
+                            $requestmanagermessage->socid = GETPOST("socid");
+                            $requestmanagermessage->contactid = GETPOST("contactid", 'int');
+                            //$requestmanagermessage->societe->id = $_POST["socid"];			// deprecated
+                            //$requestmanagermessage->contact->id = $_POST["contactid"];		// deprecated
+                            $requestmanagermessage->fk_project = GETPOST("projectid", 'int');
+                            $requestmanagermessage->note = GETPOST("note");
+                            $requestmanagermessage->pnote = GETPOST("note");
+                            $requestmanagermessage->fk_element = GETPOST("fk_element");
+                            $requestmanagermessage->elementtype = GETPOST("elementtype");
+
+                            if (!$datef && $percentage == 100) {
+                                $error++;
+                                $donotclearsession = 1;
+                                setEventMessages($langs->transnoentitiesnoconv("ErrorFieldRequired", $langs->transnoentitiesnoconv("DateEnd")), $requestmanagermessage->errors, 'errors');
+                                $action = 'edit';
+                            }
 
-                        $backtopage = GETPOST('backtopage', 'alpha');
+                            $transparency = (GETPOST("transparency") == 'on' ? 1 : 0);
+
+                            // Users
+                            $listofuserid = array();
+                            if (!empty($_SESSION['assignedtouser']))    // Now concat assigned users
+                            {
+                                // Restore array with key with same value than param 'id'
+                                $tmplist1 = json_decode($_SESSION['assignedtouser'], true);
+                                $tmplist2 = array();
+                                foreach ($tmplist1 as $key => $val) {
+                                    if ($val['id'] > 0 && $val['id'] != $assignedtouser) $listofuserid[$val['id']] = $val;
+                                }
+                            } else {
+                                $assignedtouser = (!empty($requestmanagermessage->userownerid) && $requestmanagermessage->userownerid > 0 ? $requestmanagermessage->userownerid : 0);
+                                if ($assignedtouser) $listofuserid[$assignedtouser] = array('id' => $assignedtouser, 'mandatory' => 0, 'transparency' => ($user->id == $assignedtouser ? $transparency : ''));    // Owner first
+                            }
 
-                        $fulldayevent = GETPOST('fullday');
-                        $aphour = GETPOST('aphour');
-                        $apmin = GETPOST('apmin');
-                        $p2hour = GETPOST('p2hour');
-                        $p2min = GETPOST('p2min');
-                        $percentage = in_array(GETPOST('status'), array(-1, 100)) ? GETPOST('status') : (in_array(GETPOST('complete'), array(-1, 100)) ? GETPOST('complete') : GETPOST("percentage"));    // If status is -1 or 100, percentage is not defined and we must use status
+                            $requestmanagermessage->userassigned = array();
+                            $requestmanagermessage->userownerid = 0; // Clear old content
+                            $i = 0;
+                            foreach ($listofuserid as $key => $val) {
+                                if ($i == 0) $requestmanagermessage->userownerid = $val['id'];
+                                $requestmanagermessage->userassigned[$val['id']] = array('id' => $val['id'], 'mandatory' => 0, 'transparency' => ($user->id == $val['id'] ? $transparency : ''));
+                                $i++;
+                            }
 
-                        // Clean parameters
-                        if ($aphour == -1) $aphour = '0';
-                        if ($apmin == -1) $apmin = '0';
-                        if ($p2hour == -1) $p2hour = '0';
-                        if ($p2min == -1) $p2min = '0';
+                            $requestmanagermessage->transparency = $transparency;        // We set transparency on event (even if we can also store it on each user, standard says this property is for event)
 
-                        $requestmanagermessage->fetch($id);
-                        $requestmanagermessage->fetch_userassigned();
-
-                        $datep = dol_mktime($fulldayevent ? '00' : $aphour, $fulldayevent ? '00' : $apmin, 0, $_POST["apmonth"], $_POST["apday"], $_POST["apyear"]);
-                        $datef = dol_mktime($fulldayevent ? '23' : $p2hour, $fulldayevent ? '59' : $p2min, $fulldayevent ? '59' : '0', $_POST["p2month"], $_POST["p2day"], $_POST["p2year"]);
-
-                        $requestmanagermessage->fk_action = dol_getIdFromCode($this->db, GETPOST("actioncode"), 'c_actioncomm');
-                        $requestmanagermessage->label = GETPOST("label");
-                        $requestmanagermessage->datep = $datep;
-                        $requestmanagermessage->datef = $datef;
-                        $requestmanagermessage->percentage = $percentage;
-                        $requestmanagermessage->priority = GETPOST("priority");
-                        $requestmanagermessage->fulldayevent = GETPOST("fullday") ? 1 : 0;
-                        $requestmanagermessage->location = GETPOST('location');
-                        $requestmanagermessage->socid = GETPOST("socid");
-                        $requestmanagermessage->contactid = GETPOST("contactid", 'int');
-                        //$requestmanagermessage->societe->id = $_POST["socid"];			// deprecated
-                        //$requestmanagermessage->contact->id = $_POST["contactid"];		// deprecated
-                        $requestmanagermessage->fk_project = GETPOST("projectid", 'int');
-                        $requestmanagermessage->note = GETPOST("note");
-                        $requestmanagermessage->pnote = GETPOST("note");
-                        $requestmanagermessage->fk_element = GETPOST("fk_element");
-                        $requestmanagermessage->elementtype = GETPOST("elementtype");
-
-                        if (!$datef && $percentage == 100) {
-                            $error++;
-                            $donotclearsession = 1;
-                            setEventMessages($langs->transnoentitiesnoconv("ErrorFieldRequired", $langs->transnoentitiesnoconv("DateEnd")), $requestmanagermessage->errors, 'errors');
-                            $action = 'edit';
-                        }
+                            if (!empty($conf->global->AGENDA_ENABLE_DONEBY)) {
+                                if (GETPOST("doneby")) $requestmanagermessage->userdoneid = GETPOST("doneby", "int");
+                            }
 
-                        $transparency = (GETPOST("transparency") == 'on' ? 1 : 0);
-
-                        // Users
-                        $listofuserid = array();
-                        if (!empty($_SESSION['assignedtouser']))    // Now concat assigned users
-                        {
-                            // Restore array with key with same value than param 'id'
-                            $tmplist1 = json_decode($_SESSION['assignedtouser'], true);
-                            $tmplist2 = array();
-                            foreach ($tmplist1 as $key => $val) {
-                                if ($val['id'] > 0 && $val['id'] != $assignedtouser) $listofuserid[$val['id']] = $val;
+                            // Check parameters
+                            if (!GETPOST('actioncode') > 0) {
+                                $error++;
+                                $donotclearsession = 1;
+                                $action = 'edit';
+                                setEventMessages($langs->trans("ErrorFieldRequired", $langs->transnoentitiesnoconv("Type")), null, 'errors');
+                            } else {
+                                $result = $cactioncomm->fetch(GETPOST('actioncode'));
+                            }
+                            if (empty($requestmanagermessage->userownerid)) {
+                                $error++;
+                                $donotclearsession = 1;
+                                $action = 'edit';
+                                setEventMessages($langs->trans("ErrorFieldRequired", $langs->transnoentitiesnoconv("ActionsOwnedBy")), null, 'errors');
                             }
-                        } else {
-                            $assignedtouser = (!empty($requestmanagermessage->userownerid) && $requestmanagermessage->userownerid > 0 ? $requestmanagermessage->userownerid : 0);
-                            if ($assignedtouser) $listofuserid[$assignedtouser] = array('id' => $assignedtouser, 'mandatory' => 0, 'transparency' => ($user->id == $assignedtouser ? $transparency : ''));    // Owner first
-                        }
 
-                        $requestmanagermessage->userassigned = array();
-                        $requestmanagermessage->userownerid = 0; // Clear old content
-                        $i = 0;
-                        foreach ($listofuserid as $key => $val) {
-                            if ($i == 0) $requestmanagermessage->userownerid = $val['id'];
-                            $requestmanagermessage->userassigned[$val['id']] = array('id' => $val['id'], 'mandatory' => 0, 'transparency' => ($user->id == $val['id'] ? $transparency : ''));
-                            $i++;
-                        }
+                            // Fill array 'array_options' with data from add form
+                            $extrafields = new ExtraFields($this->db);
+                            $extralabels = $extrafields->fetch_name_optionals_label($requestmanagermessage->table_element);
+                            $ret = $extrafields->setOptionalsFromPost($extralabels, $requestmanagermessage);
+                            if ($ret < 0) $error++;
 
-                        $requestmanagermessage->transparency = $transparency;        // We set transparency on event (even if we can also store it on each user, standard says this property is for event)
+                            if (!$error) {
+                                $this->db->begin();
 
-                        if (!empty($conf->global->AGENDA_ENABLE_DONEBY)) {
-                            if (GETPOST("doneby")) $requestmanagermessage->userdoneid = GETPOST("doneby", "int");
-                        }
+                                $result = $requestmanagermessage->update($user);
 
-                        // Check parameters
-                        if (!GETPOST('actioncode') > 0) {
-                            $error++;
-                            $donotclearsession = 1;
-                            $action = 'edit';
-                            setEventMessages($langs->trans("ErrorFieldRequired", $langs->transnoentitiesnoconv("Type")), null, 'errors');
-                        } else {
-                            $result = $cactioncomm->fetch(GETPOST('actioncode'));
-                        }
-                        if (empty($requestmanagermessage->userownerid)) {
-                            $error++;
-                            $donotclearsession = 1;
-                            $action = 'edit';
-                            setEventMessages($langs->trans("ErrorFieldRequired", $langs->transnoentitiesnoconv("ActionsOwnedBy")), null, 'errors');
-                        }
+                                if ($result > 0) {
+                                    unset($_SESSION['assignedtouser']);
 
-                        // Fill array 'array_options' with data from add form
-                        $extrafields = new ExtraFields($this->db);
-                        $extralabels = $extrafields->fetch_name_optionals_label($requestmanagermessage->table_element);
-                        $ret = $extrafields->setOptionalsFromPost($extralabels, $requestmanagermessage);
-                        if ($ret < 0) $error++;
+                                    $this->db->commit();
+                                } else {
+                                    setEventMessages($requestmanagermessage->error, $requestmanagermessage->errors, 'errors');
+                                    $this->db->rollback();
+                                }
+                            }
+                        }
 
                         if (!$error) {
-                            $this->db->begin();
-
-                            $result = $requestmanagermessage->update($user);
-
-                            if ($result > 0) {
+                            if (!empty($backtopage)) {
                                 unset($_SESSION['assignedtouser']);
-
-                                $this->db->commit();
-                            } else {
-                                setEventMessages($requestmanagermessage->error, $requestmanagermessage->errors, 'errors');
-                                $this->db->rollback();
+                                header("Location: " . $backtopage);
+                                exit;
                             }
                         }
-                    }
-
-                    if (!$error) {
-                        if (!empty($backtopage)) {
-                            unset($_SESSION['assignedtouser']);
-                            header("Location: " . $backtopage);
-                            exit;
-                        }
-                    }
 
-                    return 1;*/
-                } elseif ($action == 'confirm_delete' && GETPOST("confirm") == 'yes' && $user->rights->requestmanager->creer) {
-                    dol_include_once('/requestmanager/class/requestmanagermessage.class.php');
-                    $requestmanagermessage = new RequestManagerMessage($this->db);
+                        return 1;*/
+                    } elseif ($action == 'confirm_delete' && GETPOST("confirm") == 'yes' && $user->rights->requestmanager->creer) {
+                        dol_include_once('/requestmanager/class/requestmanagermessage.class.php');
+                        $requestmanagermessage = new RequestManagerMessage($this->db);
 
-                    $id = GETPOST('id', 'int');
-                    $requestmanagermessage->fetch($id);
+                        $id = GETPOST('id', 'int');
+                        $requestmanagermessage->fetch($id);
 
-                    $result = $requestmanagermessage->delete();
+                        $result = $requestmanagermessage->delete();
 
-                    if ($result >= 0) {
-                        header("Location: index.php");
-                        exit;
-                    } else {
-                        setEventMessages($requestmanagermessage->error, $requestmanagermessage->errors, 'errors');
+                        if ($result >= 0) {
+                            header("Location: index.php");
+                            exit;
+                        } else {
+                            setEventMessages($requestmanagermessage->error, $requestmanagermessage->errors, 'errors');
+                        }
+                        return 1;
                     }
-                    return 1;
                 }
             }
         } elseif (!empty($conf->global->REQUESTMANAGER_TIMESLOTS_ACTIVATE) && in_array('contractcard', $contexts)) {
